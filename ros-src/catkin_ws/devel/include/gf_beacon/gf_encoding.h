// Generated by gencpp from file gf_beacon/gf_encoding.msg
// DO NOT EDIT!


#ifndef GF_BEACON_MESSAGE_GF_ENCODING_H
#define GF_BEACON_MESSAGE_GF_ENCODING_H

#include <ros/service_traits.h>


#include <gf_beacon/gf_encodingRequest.h>
#include <gf_beacon/gf_encodingResponse.h>


namespace gf_beacon
{

struct gf_encoding
{

typedef gf_encodingRequest Request;
typedef gf_encodingResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct gf_encoding
} // namespace gf_beacon


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::gf_beacon::gf_encoding > {
  static const char* value()
  {
    return "916bededc1f7b96442f9b7ace1020840";
  }

  static const char* value(const ::gf_beacon::gf_encoding&) { return value(); }
};

template<>
struct DataType< ::gf_beacon::gf_encoding > {
  static const char* value()
  {
    return "gf_beacon/gf_encoding";
  }

  static const char* value(const ::gf_beacon::gf_encoding&) { return value(); }
};


// service_traits::MD5Sum< ::gf_beacon::gf_encodingRequest> should match 
// service_traits::MD5Sum< ::gf_beacon::gf_encoding > 
template<>
struct MD5Sum< ::gf_beacon::gf_encodingRequest>
{
  static const char* value()
  {
    return MD5Sum< ::gf_beacon::gf_encoding >::value();
  }
  static const char* value(const ::gf_beacon::gf_encodingRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::gf_beacon::gf_encodingRequest> should match 
// service_traits::DataType< ::gf_beacon::gf_encoding > 
template<>
struct DataType< ::gf_beacon::gf_encodingRequest>
{
  static const char* value()
  {
    return DataType< ::gf_beacon::gf_encoding >::value();
  }
  static const char* value(const ::gf_beacon::gf_encodingRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::gf_beacon::gf_encodingResponse> should match 
// service_traits::MD5Sum< ::gf_beacon::gf_encoding > 
template<>
struct MD5Sum< ::gf_beacon::gf_encodingResponse>
{
  static const char* value()
  {
    return MD5Sum< ::gf_beacon::gf_encoding >::value();
  }
  static const char* value(const ::gf_beacon::gf_encodingResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::gf_beacon::gf_encodingResponse> should match 
// service_traits::DataType< ::gf_beacon::gf_encoding > 
template<>
struct DataType< ::gf_beacon::gf_encodingResponse>
{
  static const char* value()
  {
    return DataType< ::gf_beacon::gf_encoding >::value();
  }
  static const char* value(const ::gf_beacon::gf_encodingResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GF_BEACON_MESSAGE_GF_ENCODING_H
